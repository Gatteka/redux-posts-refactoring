{"ast":null,"code":"import _slicedToArray from \"/var/www/reactapps/testing-app-refactoring/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/reactapps/testing-app-refactoring/src/components/Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { createPost, updatePost } from '../actions';\nimport { Form as AreaForm, TextArea } from 'semantic-ui-react';\nimport Button from '../containers/Buttons/Button';\n/** Return main form with various buttons. Form can\n * create or update posts */\n\nfunction Form({\n  status = {\n    enabled: false\n  }\n}) {\n  console.log('FORM');\n  console.log(status.elementAction);\n  /** React Hooks */\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        text = _useState4[0],\n        setText = _useState4[1];\n  /** React Hooks effects */\n\n\n  useEffect(() => {\n    if (status.optionalState) {\n      setTitle(status.optionalState.title);\n      setText(status.optionalState.text);\n    }\n  }, [status.optionalState]);\n\n  function showText() {\n    if (status.elementAction === 'updatePost') return 'Update Post';\n    if (status.elementAction === 'createPost') return 'Create Post';\n  }\n\n  return React.createElement(\"div\", {\n    className: 'ui segment ' + (status.enabled ? 'normal' : 'hidden'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Post title\"), React.createElement(\"div\", {\n    className: 'ui input',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: 'input',\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Post data\"), React.createElement(AreaForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    placeholder: \"Tell us more\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Button, {\n    title: title,\n    text: text,\n    classes: 'ui primary button',\n    buttonText: showText(),\n    id: status.optionalState ? status.optionalState.id : false,\n    action: status.elementAction,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })));\n}\n\nexport default connect()(Form);","map":{"version":3,"sources":["/var/www/reactapps/testing-app-refactoring/src/components/Form.js"],"names":["React","useState","useEffect","connect","createPost","updatePost","Form","AreaForm","TextArea","Button","status","enabled","console","log","elementAction","title","setTitle","text","setText","optionalState","showText","e","target","value","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,YAArC;AACA,SAAQC,IAAI,IAAIC,QAAhB,EAA0BC,QAA1B,QAAyC,mBAAzC;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AAEA;;;AAEA,SAASH,IAAT,CAAc;AAAEI,EAAAA,MAAM,GAAG;AAACC,IAAAA,OAAO,EAAE;AAAV;AAAX,CAAd,EAA4C;AAE5CC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,aAAnB;AAEI;;AALwC,oBAMdb,QAAQ,CAAC,EAAD,CANM;AAAA;AAAA,QAMjCc,KANiC;AAAA,QAM1BC,QAN0B;;AAAA,qBAOhBf,QAAQ,CAAC,EAAD,CAPQ;AAAA;AAAA,QAOjCgB,IAPiC;AAAA,QAO3BC,OAP2B;AASxC;;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,MAAM,CAACS,aAAX,EAA0B;AACtBH,MAAAA,QAAQ,CAACN,MAAM,CAACS,aAAP,CAAqBJ,KAAtB,CAAR;AACAG,MAAAA,OAAO,CAACR,MAAM,CAACS,aAAP,CAAqBF,IAAtB,CAAP;AACH;AACJ,GALQ,EAKN,CAACP,MAAM,CAACS,aAAR,CALM,CAAT;;AAQA,WAASC,QAAT,GAAoB;AAChB,QAAIV,MAAM,CAACI,aAAP,KAAyB,YAA7B,EAA2C,OAAO,aAAP;AAC3C,QAAIJ,MAAM,CAACI,aAAP,KAAyB,YAA7B,EAA2C,OAAO,aAAP;AAC9C;;AAED,SACI;AAAK,IAAA,SAAS,EAAE,iBAAiBJ,MAAM,CAACC,OAAP,GAAiB,QAAjB,GAA4B,QAA7C,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAK,IAAA,SAAS,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAE,OAAlB;AAA2B,IAAA,KAAK,EAAEI,KAAlC;AAAyC,IAAA,QAAQ,EAAEM,CAAC,IAAIL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,EAMI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,WAAW,EAAC,cAAtB;AAAqC,IAAA,KAAK,EAAEN,IAA5C;AAAkD,IAAA,QAAQ,EAAEI,CAAC,IAAIH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAER,KADX;AAEI,IAAA,IAAI,EAAEE,IAFV;AAGI,IAAA,OAAO,EAAE,mBAHb;AAII,IAAA,UAAU,EAAEG,QAAQ,EAJxB;AAKI,IAAA,EAAE,EAAGV,MAAM,CAACS,aAAP,GAAuBT,MAAM,CAACS,aAAP,CAAqBK,EAA5C,GAAiD,KAL1D;AAMI,IAAA,MAAM,EAAEd,MAAM,CAACI,aANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,CADJ;AAsBH;;AACD,eAAeX,OAAO,GAAGG,IAAH,CAAtB","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {createPost, updatePost} from '../actions'\nimport {Form as AreaForm, TextArea} from 'semantic-ui-react'\nimport Button from '../containers/Buttons/Button';\n\n/** Return main form with various buttons. Form can\n * create or update posts */\nfunction Form({ status = {enabled: false}}) {\n\nconsole.log('FORM');\nconsole.log(status.elementAction);\n\n    /** React Hooks */\n    const [title, setTitle] = useState(\"\");\n    const [text, setText] = useState(\"\");\n\n    /** React Hooks effects */\n    useEffect(() => {\n        if (status.optionalState) {\n            setTitle(status.optionalState.title);\n            setText(status.optionalState.text);\n        }\n    }, [status.optionalState]);\n\n\n    function showText() {\n        if (status.elementAction === 'updatePost') return 'Update Post';\n        if (status.elementAction === 'createPost') return 'Create Post';\n    }\n\n    return (\n        <div className={'ui segment ' + (status.enabled ? 'normal' : 'hidden')}>\n            <p>Post title</p>\n            <div className={'ui input'}>\n                <input className={'input'} value={title} onChange={e => setTitle(e.target.value)}/>\n            </div>\n            <p>Post data</p>\n            <AreaForm>\n                <TextArea placeholder='Tell us more' value={text} onChange={e => setText(e.target.value)}/>\n            </AreaForm>\n            <div>\n                <Button\n                    title={title}\n                    text={text}\n                    classes={'ui primary button'}\n                    buttonText={showText()}\n                    id={ status.optionalState ? status.optionalState.id : false}\n                    action={status.elementAction}\n                />\n            </div>\n        </div>\n    );\n}\nexport default connect()(Form)"]},"metadata":{},"sourceType":"module"}