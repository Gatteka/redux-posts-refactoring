{"ast":null,"code":"import _slicedToArray from \"/var/www/reactapps/testing-app-refactoring/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/reactapps/testing-app-refactoring/src/components/pages/RegisterForm.js\";\nimport React, { useState } from 'react';\nimport { Form, Input } from 'semantic-ui-react';\n/**\n * Registration/Login Form\n */\n\nfunction RegisterForm(props) {\n  let isRegister = props.action === 'register';\n  const fields = isRegister ? {\n    firstName: 'firstName',\n    lastName: 'lastName',\n    password: 'password',\n    email: 'email',\n    terms: 'terms'\n  } : {\n    password: 'password',\n    email: 'email'\n  };\n  console.log(props);\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        formState = _useState2[0],\n        setFormState = _useState2[1];\n  /**\n   * Need to check when hook formState changed and it's reliable to check data from it\n   */\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        fieldsChecked = _useState4[0],\n        setFieldsChecked = _useState4[1];\n  /**\n   *  Add or update object in formState []\n   *  with validated error state;\n   */\n\n\n  function addValue(key, value) {\n    setFormState([...formState.filter(el => el.key !== key), {\n      key: key,\n      value: value,\n      error: retrieveErrors(key, value)\n    }]);\n  }\n\n  function hasErrors(key) {\n    let element = formState.filter(el => el.key === key).pop();\n    if (element) return element.error;\n  }\n  /**\n   * Submit form action: checking required fields and redirecting if\n   * no errors found in  checking[] and formState[]\n   */\n\n\n  function submitForm() {\n    let checking = [];\n\n    for (let field in fields) {\n      if (formState.filter(el => el.key === field).length === 0) {\n        checking.push({\n          key: field,\n          value: '',\n          error: retrieveErrors(field, 0)\n        });\n      }\n    }\n\n    if (!fieldsChecked) {\n      if (checking.filter(el => el.error !== false).length < 1) {\n        window.location.href = \"/mainPage\";\n      }\n    } else {\n      if (formState.filter(el => el.error !== false).length < 1) {\n        window.location.href = \"/mainPage\";\n      }\n    }\n\n    setFormState([...formState, ...checking]);\n    setFieldsChecked(true);\n  }\n\n  function retrieveErrors(key, value) {\n    if (!value || value.length < 1) {\n      return {\n        content: 'this is required field',\n        pointing: 'left'\n      };\n    }\n\n    switch (key) {\n      case fields.firstName:\n        if (value.length < 2) {\n          return {\n            content: 'Not enough characters',\n            pointing: 'left'\n          };\n        }\n\n        if (!value.match(/^[a-z ,.'-]+$/i)) {\n          return {\n            content: 'Incorrect name. Use only characters',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      case fields.lastName:\n        if (value.length < 2) {\n          return {\n            content: 'Not enough characters',\n            pointing: 'left'\n          };\n        }\n\n        if (!value.match(/^[a-z ,.'-]+$/i)) {\n          return {\n            content: 'Incorrect name. Use only characters',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      case fields.password:\n        if (value.length < 4) {\n          return {\n            content: 'Not enough characters',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      case fields.terms:\n        if (!value) {\n          return {\n            content: 'You must agree to the terms and conditions',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      case fields.email:\n        if (!value.match('^([a-z0-9_-]+\\\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\\\.[a-z0-9_-]+)*\\\\.[a-z]{2,6}$')) {\n          return {\n            content: 'Incorrect email address',\n            pointing: 'left'\n          };\n        }\n\n        return false;\n\n      default:\n        return false;\n    }\n  }\n  /**\n   * Return Form Popup for registration or login depends on prop action\n   */\n\n\n  if (props.action === 'register') {\n    return React.createElement(Form, {\n      id: 'register-ui-form',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      id: \"form-input-control-first-name\",\n      control: Input,\n      width: 8,\n      error: hasErrors(fields.firstName),\n      onChange: e => addValue(fields.firstName, e.target.value),\n      label: \"First name\",\n      placeholder: \"First name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      id: \"form-input-control-last-name\",\n      error: hasErrors(fields.lastName),\n      control: Input,\n      width: 8,\n      onChange: e => addValue(fields.lastName, e.target.value),\n      label: \"Last name\",\n      placeholder: \"Last name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      id: \"form-input-control-password\",\n      error: hasErrors('password'),\n      control: Input,\n      width: 8,\n      onChange: e => addValue('password', e.target.value),\n      label: \"Password\",\n      type: \"password\",\n      placeholder: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      id: \"form-input-control-email\",\n      error: hasErrors('email'),\n      control: Input,\n      width: 8,\n      onChange: e => addValue('email', e.target.value),\n      label: \"Email address\",\n      type: \"email\",\n      placeholder: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Form.Checkbox, {\n      onClick: (e, {\n        checked\n      }) => addValue(fields.terms, checked),\n      error: hasErrors(fields.terms),\n      label: \"I agree to the Terms and Conditions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    })), React.createElement(Form.Button, {\n      content: \"Submit\",\n      onClick: () => submitForm(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Form, {\n    id: 'register-ui-form',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    id: \"form-input-control-last-name\",\n    error: hasErrors('email'),\n    control: Input,\n    width: 8,\n    onChange: e => addValue('email', e.target.value),\n    label: \"Email address\",\n    type: \"email\",\n    placeholder: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    id: \"form-input-control-last-name\",\n    error: hasErrors('password'),\n    control: Input,\n    width: 8,\n    onChange: e => addValue('password', e.target.value),\n    label: \"Password\",\n    type: \"password\",\n    placeholder: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }), React.createElement(Form.Button, {\n    content: \"Submit\",\n    onClick: () => submitForm(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }));\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/var/www/reactapps/testing-app-refactoring/src/components/pages/RegisterForm.js"],"names":["React","useState","Form","Input","RegisterForm","props","isRegister","action","fields","firstName","lastName","password","email","terms","console","log","formState","setFormState","fieldsChecked","setFieldsChecked","addValue","key","value","filter","el","error","retrieveErrors","hasErrors","element","pop","submitForm","checking","field","length","push","window","location","href","content","pointing","match","e","target","checked"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Form, Input} from 'semantic-ui-react'\n\n/**\n * Registration/Login Form\n */\nfunction RegisterForm(props) {\n\nlet isRegister = props.action === 'register';\n\n    const fields = isRegister ? {\n        firstName: 'firstName',\n        lastName: 'lastName',\n        password: 'password',\n        email: 'email',\n        terms: 'terms',\n    } : {\n        password: 'password',\n        email: 'email',\n        };\n\n    console.log(props);\n\n    const [formState, setFormState] = useState([]);\n\n    /**\n     * Need to check when hook formState changed and it's reliable to check data from it\n     */\n    const [fieldsChecked, setFieldsChecked] = useState(false);\n\n    /**\n     *  Add or update object in formState []\n     *  with validated error state;\n     */\n    function addValue(key, value) {\n        setFormState(\n            [...formState.filter(el => el.key !== key),\n                {\n                    key: key,\n                    value: value,\n                    error: retrieveErrors(key, value)\n                }\n            ]\n        );\n    }\n\n    function hasErrors(key) {\n        let element = formState.filter(el => el.key === key).pop();\n        if (element) return element.error;\n    }\n\n    /**\n     * Submit form action: checking required fields and redirecting if\n     * no errors found in  checking[] and formState[]\n     */\n    function submitForm() {\n        let checking = [];\n        for (let field in fields) {\n            if (formState.filter(el => el.key === field).length === 0) {\n                checking.push({\n                    key: field,\n                    value: '',\n                    error: retrieveErrors(field, 0)\n                });\n            }\n        }\n        if (!fieldsChecked) {\n            if (checking.filter(el => el.error !== false).length < 1) {\n                window.location.href = \"/mainPage\"\n            }\n        } else {\n            if (formState.filter(el => el.error !== false).length < 1) {\n                window.location.href = \"/mainPage\"\n            }\n        }\n        setFormState([...formState, ...checking]);\n        setFieldsChecked(true);\n\n    }\n\n\n    function retrieveErrors(key, value) {\n        if (!value || value.length < 1) {\n            return {\n                content: 'this is required field',\n                pointing: 'left'\n            };\n        }\n        switch (key) {\n            case fields.firstName:\n                if (value.length < 2) {\n                    return {\n                        content: 'Not enough characters',\n                        pointing: 'left'\n                    };\n                }\n                if (!value.match( /^[a-z ,.'-]+$/i)) {\n                    return {\n                        content: 'Incorrect name. Use only characters',\n                        pointing: 'left'\n                    };\n                }\n                return false;\n            case fields.lastName:\n                if (value.length < 2) {\n                    return {\n                        content: 'Not enough characters',\n                        pointing: 'left'\n                    };\n                }\n                if (!value.match( /^[a-z ,.'-]+$/i)) {\n                    return {\n                        content: 'Incorrect name. Use only characters',\n                        pointing: 'left'\n                    };\n                }\n                return false;\n            case fields.password:\n                if (value.length < 4) {\n                    return {\n                        content: 'Not enough characters',\n                        pointing: 'left'\n                    };\n                }\n                return false;\n            case fields.terms:\n                if (!value) {\n                    return {\n                        content: 'You must agree to the terms and conditions',\n                        pointing: 'left'\n                    };\n                }\n                return false;\n            case fields.email:\n                if (!value.match('^([a-z0-9_-]+\\\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\\\.[a-z0-9_-]+)*\\\\.[a-z]{2,6}$')) {\n                    return {\n                        content: 'Incorrect email address',\n                        pointing: 'left'\n                    };\n                }\n                return false;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * Return Form Popup for registration or login depends on prop action\n     */\n    if (props.action === 'register') {\n        return (\n            <Form id={'register-ui-form'}>\n                <Form.Group widths='equal'>\n                    <Form.Field\n                        id='form-input-control-first-name'\n                        control={Input}\n                        width={8}\n                        error={hasErrors(fields.firstName)}\n                        onChange={e => addValue(fields.firstName, e.target.value)}\n                        label='First name'\n                        placeholder='First name'\n                    />\n                    <Form.Field\n                        id='form-input-control-last-name'\n                        error={hasErrors(fields.lastName)}\n                        control={Input}\n                        width={8}\n                        onChange={e => addValue(fields.lastName, e.target.value)}\n                        label='Last name'\n                        placeholder='Last name'\n                    />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Field\n                        id='form-input-control-password'\n                        error={hasErrors('password')}\n                        control={Input}\n                        width={8}\n                        onChange={e => addValue('password', e.target.value)}\n                        label='Password'\n                        type='password'\n                        placeholder='password'\n                    />\n                    <Form.Field\n                        id='form-input-control-email'\n                        error={hasErrors('email')}\n                        control={Input}\n                        width={8}\n                        onChange={e => addValue('email', e.target.value)}\n                        label='Email address'\n                        type='email'\n                        placeholder='email'\n                    />\n                </Form.Group>\n                <Form.Field>\n                    <Form.Checkbox\n                        onClick={(e, {checked}) => addValue(fields.terms, checked)}\n                        error={hasErrors(fields.terms)}\n                        label='I agree to the Terms and Conditions'\n                    />\n                </Form.Field>\n                <Form.Button\n                    content='Submit'\n                    onClick={() => submitForm()}\n                />\n            </Form>\n        )\n    }\n    return (\n        <Form id={'register-ui-form'}>\n            <Form.Group>\n                <Form.Field\n                    id='form-input-control-last-name'\n                    error={hasErrors('email')}\n                    control={Input}\n                    width={8}\n                    onChange={e => addValue('email', e.target.value)}\n                    label='Email address'\n                    type='email'\n                    placeholder='email'\n                />\n                <Form.Field\n                    id='form-input-control-last-name'\n                    error={hasErrors('password')}\n                    control={Input}\n                    width={8}\n                    onChange={e => addValue('password', e.target.value)}\n                    label='Password'\n                    type='password'\n                    placeholder='password'\n                />\n            </Form.Group>\n            <Form.Field>\n            </Form.Field>\n            <Form.Button\n                content='Submit'\n                onClick={() => submitForm()}\n            />\n        </Form>\n    )\n}\n\nexport default RegisterForm"]},"metadata":{},"sourceType":"module"}