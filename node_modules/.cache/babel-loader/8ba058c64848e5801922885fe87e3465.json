{"ast":null,"code":"var _jsxFileName = \"/var/www/reactapps/testing-app-refactoring/src/components/PostList.js\";\nimport { connect } from \"react-redux\";\nimport React from 'react';\nimport Post from '../containers/Post';\nimport uuid from 'uuid/v4';\n/**\n *  if filter.type is 'deleted' it will be filter where post.deleted === true\n * (show all deleted posts from allPosts)\n *\n * */\n\nfunction PostList({\n  allPosts,\n  filter\n}) {\n  console.log(filter);\n  let deleted = filter.type === 'deleted';\n  let filteredPosts = allPosts.filter(post => post.deleted === deleted);\n  return React.createElement(\"ul\", {\n    className: 'list ui grid',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, filteredPosts.map(post => React.createElement(\"div\", {\n    className: \"two wide column post-items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Post, {\n    id: post.id,\n    title: post.title,\n    text: post.text,\n    className: deleted ? ' deleted-post ui segment' : 'ui segment',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }))));\n}\n\nexport default connect()(PostList);","map":{"version":3,"sources":["/var/www/reactapps/testing-app-refactoring/src/components/PostList.js"],"names":["connect","React","Post","uuid","PostList","allPosts","filter","console","log","deleted","type","filteredPosts","post","map","id","title","text"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA;;;;;;AAKA,SAASC,QAAT,CAAkB;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAlB,EAAsC;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEA,MAAIG,OAAO,GAAIH,MAAM,CAACI,IAAP,KAAgB,SAA/B;AACA,MAAIC,aAAa,GAAGN,QAAQ,CAACC,MAAT,CAAgBM,IAAI,IAAIA,IAAI,CAACH,OAAL,KAAiBA,OAAzC,CAApB;AAEA,SAEA;AAAI,IAAA,SAAS,EAAE,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQE,aAAa,CAACE,GAAd,CAAmBD,IAAI,IACvB;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAO,IAAA,EAAE,EAAEA,IAAI,CAACE,EAAhB;AAAoB,IAAA,KAAK,EAAEF,IAAI,CAACG,KAAhC;AACM,IAAA,IAAI,EAAEH,IAAI,CAACI,IADjB;AACuB,IAAA,SAAS,EAAEP,OAAO,GAAG,0BAAH,GAAgC,YADzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,CAFR,CAFA;AAaH;;AAED,eAAeT,OAAO,GAAGI,QAAH,CAAtB","sourcesContent":["import {connect} from \"react-redux\";\nimport React from 'react'\nimport Post from '../containers/Post';\nimport uuid from 'uuid/v4';\n/**\n *  if filter.type is 'deleted' it will be filter where post.deleted === true\n * (show all deleted posts from allPosts)\n *\n * */\nfunction PostList({allPosts, filter}) {\n    console.log(filter);\n\n    let deleted = (filter.type === 'deleted');\n    let filteredPosts = allPosts.filter(post => post.deleted === deleted);\n\n    return (\n\n    <ul className={'list ui grid'}>\n        {\n            filteredPosts.map( post => (\n            <div className=\"two wide column post-items\">\n                <Post  id={post.id} title={post.title}\n                      text={post.text} className={deleted ? ' deleted-post ui segment' : 'ui segment'}/>\n            </div>\n        ))\n        }\n    </ul>\n);\n}\n\nexport default connect()(PostList)"]},"metadata":{},"sourceType":"module"}